// <auto-generated />
using System;
using FacilityMonitoring.Common.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FacilityMonitoring.Common.Migrations
{
    [DbContext(typeof(FacilityContext))]
    partial class FacilityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FacilityMonitoring.Common.Model.AmmoniaControllerReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmmoniaControllerId")
                        .HasColumnType("int");

                    b.Property<int>("Heater1DutyCycle")
                        .HasColumnType("int");

                    b.Property<int>("Heater2DutyCycle")
                        .HasColumnType("int");

                    b.Property<int>("Heater3DutyCycle")
                        .HasColumnType("int");

                    b.Property<int>("Heater4DutyCycle")
                        .HasColumnType("int");

                    b.Property<bool>("Tank1Alarm")
                        .HasColumnType("bit");

                    b.Property<int>("Tank1Gas")
                        .HasColumnType("int");

                    b.Property<int>("Tank1NonZero")
                        .HasColumnType("int");

                    b.Property<int>("Tank1NonZeroCal")
                        .HasColumnType("int");

                    b.Property<int>("Tank1Tare")
                        .HasColumnType("int");

                    b.Property<double>("Tank1Temperature")
                        .HasColumnType("float");

                    b.Property<int>("Tank1Total")
                        .HasColumnType("int");

                    b.Property<bool>("Tank1Warning")
                        .HasColumnType("bit");

                    b.Property<int>("Tank1Weight")
                        .HasColumnType("int");

                    b.Property<int>("Tank1Zero")
                        .HasColumnType("int");

                    b.Property<int>("Tank1ZeroCal")
                        .HasColumnType("int");

                    b.Property<bool>("Tank2Alarm")
                        .HasColumnType("bit");

                    b.Property<int>("Tank2Gas")
                        .HasColumnType("int");

                    b.Property<int>("Tank2NonZero")
                        .HasColumnType("int");

                    b.Property<int>("Tank2NonZeroCal")
                        .HasColumnType("int");

                    b.Property<int>("Tank2Tare")
                        .HasColumnType("int");

                    b.Property<double>("Tank2Temperature")
                        .HasColumnType("float");

                    b.Property<int>("Tank2Total")
                        .HasColumnType("int");

                    b.Property<bool>("Tank2Warning")
                        .HasColumnType("bit");

                    b.Property<int>("Tank2Weight")
                        .HasColumnType("int");

                    b.Property<int>("Tank2Zero")
                        .HasColumnType("int");

                    b.Property<int>("Tank2ZeroCal")
                        .HasColumnType("int");

                    b.Property<bool>("Tank3Alarm")
                        .HasColumnType("bit");

                    b.Property<int>("Tank3Gas")
                        .HasColumnType("int");

                    b.Property<int>("Tank3NonZero")
                        .HasColumnType("int");

                    b.Property<int>("Tank3NonZeroCal")
                        .HasColumnType("int");

                    b.Property<int>("Tank3Tare")
                        .HasColumnType("int");

                    b.Property<double>("Tank3Temperature")
                        .HasColumnType("float");

                    b.Property<int>("Tank3Total")
                        .HasColumnType("int");

                    b.Property<bool>("Tank3Warning")
                        .HasColumnType("bit");

                    b.Property<int>("Tank3Weight")
                        .HasColumnType("int");

                    b.Property<int>("Tank3Zero")
                        .HasColumnType("int");

                    b.Property<int>("Tank3ZeroCal")
                        .HasColumnType("int");

                    b.Property<bool>("Tank4Alarm")
                        .HasColumnType("bit");

                    b.Property<int>("Tank4Gas")
                        .HasColumnType("int");

                    b.Property<int>("Tank4NonZero")
                        .HasColumnType("int");

                    b.Property<int>("Tank4NonZeroCal")
                        .HasColumnType("int");

                    b.Property<int>("Tank4Tare")
                        .HasColumnType("int");

                    b.Property<double>("Tank4Temperature")
                        .HasColumnType("float");

                    b.Property<int>("Tank4Total")
                        .HasColumnType("int");

                    b.Property<bool>("Tank4Warning")
                        .HasColumnType("bit");

                    b.Property<int>("Tank4Weight")
                        .HasColumnType("int");

                    b.Property<int>("Tank4Zero")
                        .HasColumnType("int");

                    b.Property<int>("Tank4ZeroCal")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AmmoniaControllerId");

                    b.ToTable("AmmoniaControllerReadings");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Category");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GeneratorSystemError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("E01_A1")
                        .HasColumnType("int");

                    b.Property<int>("E01_A2")
                        .HasColumnType("int");

                    b.Property<int>("E01_A3")
                        .HasColumnType("int");

                    b.Property<int>("E01_B1")
                        .HasColumnType("int");

                    b.Property<int>("E01_B2")
                        .HasColumnType("int");

                    b.Property<int>("E01_B3")
                        .HasColumnType("int");

                    b.Property<int>("E01_C1")
                        .HasColumnType("int");

                    b.Property<int>("E01_C2")
                        .HasColumnType("int");

                    b.Property<int>("E01_C3")
                        .HasColumnType("int");

                    b.Property<int>("E02_A1")
                        .HasColumnType("int");

                    b.Property<int>("E02_A2")
                        .HasColumnType("int");

                    b.Property<int>("E02_A3")
                        .HasColumnType("int");

                    b.Property<int>("E02_B1")
                        .HasColumnType("int");

                    b.Property<int>("E02_B2")
                        .HasColumnType("int");

                    b.Property<int>("E02_B3")
                        .HasColumnType("int");

                    b.Property<int>("E02_C1")
                        .HasColumnType("int");

                    b.Property<int>("E02_C2")
                        .HasColumnType("int");

                    b.Property<int>("E02_C3")
                        .HasColumnType("int");

                    b.Property<int>("E03_A")
                        .HasColumnType("int");

                    b.Property<int>("E03_B")
                        .HasColumnType("int");

                    b.Property<int>("E03_C")
                        .HasColumnType("int");

                    b.Property<int>("E04_A")
                        .HasColumnType("int");

                    b.Property<int>("E04_B")
                        .HasColumnType("int");

                    b.Property<int>("E04_C")
                        .HasColumnType("int");

                    b.Property<int>("E05_A1")
                        .HasColumnType("int");

                    b.Property<int>("E05_A2")
                        .HasColumnType("int");

                    b.Property<int>("E05_A3")
                        .HasColumnType("int");

                    b.Property<int>("E05_B1")
                        .HasColumnType("int");

                    b.Property<int>("E05_B2")
                        .HasColumnType("int");

                    b.Property<int>("E05_B3")
                        .HasColumnType("int");

                    b.Property<int>("E05_C1")
                        .HasColumnType("int");

                    b.Property<int>("E05_C2")
                        .HasColumnType("int");

                    b.Property<int>("E05_C3")
                        .HasColumnType("int");

                    b.Property<int>("E06")
                        .HasColumnType("int");

                    b.Property<int>("E07")
                        .HasColumnType("int");

                    b.Property<int>("E08")
                        .HasColumnType("int");

                    b.Property<int>("E09")
                        .HasColumnType("int");

                    b.Property<int>("E10")
                        .HasColumnType("int");

                    b.Property<int>("E11")
                        .HasColumnType("int");

                    b.Property<int>("E12")
                        .HasColumnType("int");

                    b.Property<int>("E13")
                        .HasColumnType("int");

                    b.Property<int>("E14")
                        .HasColumnType("int");

                    b.Property<int>("E15")
                        .HasColumnType("int");

                    b.Property<int>("E16_A")
                        .HasColumnType("int");

                    b.Property<int>("E16_B")
                        .HasColumnType("int");

                    b.Property<int>("E17")
                        .HasColumnType("int");

                    b.Property<int>("E18")
                        .HasColumnType("int");

                    b.Property<int>("E19")
                        .HasColumnType("int");

                    b.Property<int>("E20_A")
                        .HasColumnType("int");

                    b.Property<int>("E20_B")
                        .HasColumnType("int");

                    b.Property<int>("E21")
                        .HasColumnType("int");

                    b.Property<int>("E22")
                        .HasColumnType("int");

                    b.Property<int>("E23")
                        .HasColumnType("int");

                    b.Property<int>("E24")
                        .HasColumnType("int");

                    b.Property<int>("E25")
                        .HasColumnType("int");

                    b.Property<int>("E26")
                        .HasColumnType("int");

                    b.Property<int>("E27")
                        .HasColumnType("int");

                    b.Property<int>("E28")
                        .HasColumnType("int");

                    b.Property<int>("E29")
                        .HasColumnType("int");

                    b.Property<int>("E30")
                        .HasColumnType("int");

                    b.Property<int>("E31")
                        .HasColumnType("int");

                    b.Property<int>("E32")
                        .HasColumnType("int");

                    b.Property<int>("E33")
                        .HasColumnType("int");

                    b.Property<int>("E34")
                        .HasColumnType("int");

                    b.Property<int>("E35")
                        .HasColumnType("int");

                    b.Property<int>("E36_A")
                        .HasColumnType("int");

                    b.Property<int>("E36_B")
                        .HasColumnType("int");

                    b.Property<int>("E36_C")
                        .HasColumnType("int");

                    b.Property<int>("E37")
                        .HasColumnType("int");

                    b.Property<int>("E38")
                        .HasColumnType("int");

                    b.Property<int>("E39")
                        .HasColumnType("int");

                    b.Property<int>("E40")
                        .HasColumnType("int");

                    b.Property<int>("E41")
                        .HasColumnType("int");

                    b.Property<int>("E42")
                        .HasColumnType("int");

                    b.Property<int>("E43")
                        .HasColumnType("int");

                    b.Property<int>("E44")
                        .HasColumnType("int");

                    b.Property<int>("E45")
                        .HasColumnType("int");

                    b.Property<int>("E46")
                        .HasColumnType("int");

                    b.Property<int>("E47")
                        .HasColumnType("int");

                    b.Property<int>("E48")
                        .HasColumnType("int");

                    b.Property<int>("H2GenReadingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("H2GenReadingId")
                        .IsUnique();

                    b.ToTable("GeneratorSystemErrors");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GeneratorSystemWarning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("H2GenReadingId")
                        .HasColumnType("int");

                    b.Property<int>("W01")
                        .HasColumnType("int");

                    b.Property<int>("W02")
                        .HasColumnType("int");

                    b.Property<int>("W03")
                        .HasColumnType("int");

                    b.Property<int>("W04")
                        .HasColumnType("int");

                    b.Property<int>("W05")
                        .HasColumnType("int");

                    b.Property<int>("W06")
                        .HasColumnType("int");

                    b.Property<int>("W07")
                        .HasColumnType("int");

                    b.Property<int>("W08")
                        .HasColumnType("int");

                    b.Property<int>("W09")
                        .HasColumnType("int");

                    b.Property<int>("W10")
                        .HasColumnType("int");

                    b.Property<int>("W11")
                        .HasColumnType("int");

                    b.Property<int>("W12")
                        .HasColumnType("int");

                    b.Property<int>("W13")
                        .HasColumnType("int");

                    b.Property<int>("W14")
                        .HasColumnType("int");

                    b.Property<int>("W15")
                        .HasColumnType("int");

                    b.Property<int>("W16")
                        .HasColumnType("int");

                    b.Property<int>("W17")
                        .HasColumnType("int");

                    b.Property<int>("W18")
                        .HasColumnType("int");

                    b.Property<int>("W19")
                        .HasColumnType("int");

                    b.Property<int>("W20")
                        .HasColumnType("int");

                    b.Property<int>("W21")
                        .HasColumnType("int");

                    b.Property<int>("W22")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("H2GenReadingId")
                        .IsUnique();

                    b.ToTable("GeneratorSystemWarnings");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GenericBoxReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Alarm1")
                        .HasColumnType("bit");

                    b.Property<bool>("Alarm2")
                        .HasColumnType("bit");

                    b.Property<bool>("Alarm3")
                        .HasColumnType("bit");

                    b.Property<double>("AnalogCh1")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh10")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh11")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh12")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh13")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh14")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh15")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh16")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh2")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh3")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh4")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh5")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh6")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh7")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh8")
                        .HasColumnType("float");

                    b.Property<double>("AnalogCh9")
                        .HasColumnType("float");

                    b.Property<bool>("DigitalCh1")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh10")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh11")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh12")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh13")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh14")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh15")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh16")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh17")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh18")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh19")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh2")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh20")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh21")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh22")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh23")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh24")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh25")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh26")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh27")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh28")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh29")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh3")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh30")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh31")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh32")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh33")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh34")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh35")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh36")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh37")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh38")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh4")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh5")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh6")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh7")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh8")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh9")
                        .HasColumnType("bit");

                    b.Property<int>("GenericMonitorBoxId")
                        .HasColumnType("int");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OutputCh1")
                        .HasColumnType("bit");

                    b.Property<bool>("OutputCh10")
                        .HasColumnType("bit");

                    b.Property<bool>("OutputCh2")
                        .HasColumnType("bit");

                    b.Property<bool>("OutputCh3")
                        .HasColumnType("bit");

                    b.Property<bool>("OutputCh4")
                        .HasColumnType("bit");

                    b.Property<bool>("OutputCh5")
                        .HasColumnType("bit");

                    b.Property<bool>("OutputCh6")
                        .HasColumnType("bit");

                    b.Property<bool>("OutputCh7")
                        .HasColumnType("bit");

                    b.Property<bool>("OutputCh8")
                        .HasColumnType("bit");

                    b.Property<bool>("OutputCh9")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GenericMonitorBoxId");

                    b.ToTable("GenericBoxReadings");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GenericMonitorBoxAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnalogCh1")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh10")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh11")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh12")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh13")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh14")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh15")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh16")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh2")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh3")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh4")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh5")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh6")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh7")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh8")
                        .HasColumnType("int");

                    b.Property<int>("AnalogCh9")
                        .HasColumnType("int");

                    b.Property<bool>("DigitalCh1")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh10")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh11")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh12")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh13")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh14")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh15")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh16")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh17")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh18")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh19")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh2")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh20")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh21")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh22")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh23")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh24")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh25")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh26")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh27")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh28")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh29")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh3")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh30")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh31")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh32")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh33")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh34")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh35")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh36")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh37")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh38")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh4")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh5")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh6")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh7")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh8")
                        .HasColumnType("bit");

                    b.Property<bool>("DigitalCh9")
                        .HasColumnType("bit");

                    b.Property<int>("GenericBoxReadingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenericBoxReadingId")
                        .IsUnique();

                    b.ToTable("GenericBoxAlerts");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.H2GenReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("A200DrainValve")
                        .HasColumnType("int");

                    b.Property<int>("A200InletValve")
                        .HasColumnType("int");

                    b.Property<int>("A200LevelEmpty")
                        .HasColumnType("int");

                    b.Property<int>("A200LevelFlooded")
                        .HasColumnType("int");

                    b.Property<int>("A200LevelHigh")
                        .HasColumnType("int");

                    b.Property<int>("A200LevelLow")
                        .HasColumnType("int");

                    b.Property<int>("A300DrainValve")
                        .HasColumnType("int");

                    b.Property<int>("A300LevelEmpty")
                        .HasColumnType("int");

                    b.Property<int>("A300LevelFlooded")
                        .HasColumnType("int");

                    b.Property<int>("A300LevelHigh")
                        .HasColumnType("int");

                    b.Property<int>("A300LevelLow")
                        .HasColumnType("int");

                    b.Property<double>("AmbientTemperature")
                        .HasColumnType("float");

                    b.Property<double>("CG220Level")
                        .HasColumnType("float");

                    b.Property<double>("DIWaterQuality")
                        .HasColumnType("float");

                    b.Property<int>("DryerValve1")
                        .HasColumnType("int");

                    b.Property<int>("DryerValve2")
                        .HasColumnType("int");

                    b.Property<int>("DryerValve3")
                        .HasColumnType("int");

                    b.Property<int>("DryerValve4")
                        .HasColumnType("int");

                    b.Property<double>("ExtWaterQuality")
                        .HasColumnType("float");

                    b.Property<int>("GeneratorId")
                        .HasColumnType("int");

                    b.Property<double>("HeatExchangerWaterTemp")
                        .HasColumnType("float");

                    b.Property<double>("HeatSinkTemperature")
                        .HasColumnType("float");

                    b.Property<double>("HydrogenFlow")
                        .HasColumnType("float");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperationMode")
                        .HasColumnType("int");

                    b.Property<int>("PSFaultA1")
                        .HasColumnType("int");

                    b.Property<int>("PSFaultA2")
                        .HasColumnType("int");

                    b.Property<int>("PSFaultB1")
                        .HasColumnType("int");

                    b.Property<int>("PSFaultB2")
                        .HasColumnType("int");

                    b.Property<int>("PSFaultC1")
                        .HasColumnType("int");

                    b.Property<int>("PSFaultC2")
                        .HasColumnType("int");

                    b.Property<int>("PSFault_A3")
                        .HasColumnType("int");

                    b.Property<int>("PSFault_B3")
                        .HasColumnType("int");

                    b.Property<int>("PSFault_C3")
                        .HasColumnType("int");

                    b.Property<int>("PSUnitStatus")
                        .HasColumnType("int");

                    b.Property<int>("PSV_A1")
                        .HasColumnType("int");

                    b.Property<int>("PSV_A2")
                        .HasColumnType("int");

                    b.Property<int>("PSV_A3")
                        .HasColumnType("int");

                    b.Property<int>("PSV_B1")
                        .HasColumnType("int");

                    b.Property<int>("PSV_B2")
                        .HasColumnType("int");

                    b.Property<int>("PSV_B3")
                        .HasColumnType("int");

                    b.Property<int>("PSV_C1")
                        .HasColumnType("int");

                    b.Property<int>("PSV_C2")
                        .HasColumnType("int");

                    b.Property<int>("PSV_C3")
                        .HasColumnType("int");

                    b.Property<double>("ProductPressure")
                        .HasColumnType("float");

                    b.Property<int>("PsCardEnableA1")
                        .HasColumnType("int");

                    b.Property<int>("PsCardEnableA2")
                        .HasColumnType("int");

                    b.Property<int>("PsCardEnableB1")
                        .HasColumnType("int");

                    b.Property<int>("PsCardEnableB2")
                        .HasColumnType("int");

                    b.Property<int>("PsCardEnableC1")
                        .HasColumnType("int");

                    b.Property<int>("PsCardEnableC2")
                        .HasColumnType("int");

                    b.Property<int>("PsCardEnable_A3")
                        .HasColumnType("int");

                    b.Property<int>("PsCardEnable_B3")
                        .HasColumnType("int");

                    b.Property<int>("PsCardEnable_C3")
                        .HasColumnType("int");

                    b.Property<int>("PumpControl")
                        .HasColumnType("int");

                    b.Property<int>("StackAMonitorCurrent")
                        .HasColumnType("int");

                    b.Property<int>("StackAValve")
                        .HasColumnType("int");

                    b.Property<int>("StackAWaterFlow")
                        .HasColumnType("int");

                    b.Property<int>("StackBMonitorCurrent")
                        .HasColumnType("int");

                    b.Property<int>("StackBValve")
                        .HasColumnType("int");

                    b.Property<int>("StackBWaterFlow")
                        .HasColumnType("int");

                    b.Property<int>("StackCMonitorCurrent")
                        .HasColumnType("int");

                    b.Property<int>("StackCValve")
                        .HasColumnType("int");

                    b.Property<int>("StackCWaterFlow")
                        .HasColumnType("int");

                    b.Property<double>("System24VPower")
                        .HasColumnType("float");

                    b.Property<double>("System3VPower")
                        .HasColumnType("float");

                    b.Property<double>("System5VPower")
                        .HasColumnType("float");

                    b.Property<int>("SystemMode")
                        .HasColumnType("int");

                    b.Property<double>("SystemPressure")
                        .HasColumnType("float");

                    b.Property<int>("SystemState")
                        .HasColumnType("int");

                    b.Property<double>("ThermalControlValve")
                        .HasColumnType("float");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("VentValve")
                        .HasColumnType("int");

                    b.Property<double>("WaterQuality")
                        .HasColumnType("float");

                    b.Property<double>("WaterTemperature")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GeneratorId");

                    b.ToTable("H2GenReadings");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.ModbusDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("BypassAll")
                        .HasColumnType("bit");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<double>("ReadInterval")
                        .HasColumnType("float");

                    b.Property<double>("SaveInterval")
                        .HasColumnType("float");

                    b.Property<int>("SlaveAddress")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModbusDevices");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ModbusDevice");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Bypass")
                        .HasColumnType("bit");

                    b.Property<bool>("Connected")
                        .HasColumnType("bit");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Logic")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterIndex")
                        .HasColumnType("int");

                    b.Property<int>("RegisterLength")
                        .HasColumnType("int");

                    b.Property<int?>("SensorTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("SensorTypeId");

                    b.ToTable("Registers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Register");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.SensorType", b =>
                {
                    b.HasBaseType("FacilityMonitoring.Common.Model.Category");

                    b.Property<double>("MaxPoint")
                        .HasColumnType("float");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ZeroPoint")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("SensorType");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.AmmoniaController", b =>
                {
                    b.HasBaseType("FacilityMonitoring.Common.Model.ModbusDevice");

                    b.Property<int>("ActiveTank")
                        .HasColumnType("int");

                    b.Property<int>("CalInputBaseAddr")
                        .HasColumnType("int");

                    b.Property<int>("CalInputLength")
                        .HasColumnType("int");

                    b.Property<int>("CalModeAddr")
                        .HasColumnType("int");

                    b.Property<int>("CoilBaseAddress")
                        .HasColumnType("int");

                    b.Property<int>("DataForInputAddr")
                        .HasColumnType("int");

                    b.Property<int>("ReadCoilLength")
                        .HasColumnType("int");

                    b.Property<int>("ReadRegisterLength")
                        .HasColumnType("int");

                    b.Property<int>("RegisterBaseAddress")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("AmmoniaController");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GenericMonitorBox", b =>
                {
                    b.HasBaseType("FacilityMonitoring.Common.Model.ModbusDevice");

                    b.Property<int>("AlarmAddr")
                        .HasColumnType("int");

                    b.Property<int>("AnalogChannelCount")
                        .HasColumnType("int");

                    b.Property<int>("DigitalInputChannelCount")
                        .HasColumnType("int");

                    b.Property<int>("DigitalOutputChannelCount")
                        .HasColumnType("int");

                    b.Property<int>("ModbusComAddr")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareMaintAddr")
                        .HasColumnType("int");

                    b.Property<int>("StateAddr")
                        .HasColumnType("int");

                    b.Property<int>("WarningAddr")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("GenericMonitorBox");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.H2Generator", b =>
                {
                    b.HasBaseType("FacilityMonitoring.Common.Model.ModbusDevice");

                    b.Property<int>("OperationMode")
                        .HasColumnType("int");

                    b.Property<int>("SystemState")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("H2Generator");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.AnalogChannel", b =>
                {
                    b.HasBaseType("FacilityMonitoring.Common.Model.Register");

                    b.Property<int>("Alarm1Action")
                        .HasColumnType("int");

                    b.Property<bool>("Alarm1Enabled")
                        .HasColumnType("bit");

                    b.Property<double>("Alarm1SetPoint")
                        .HasColumnType("float");

                    b.Property<int>("Alarm2Action")
                        .HasColumnType("int");

                    b.Property<bool>("Alarm2Enabled")
                        .HasColumnType("bit");

                    b.Property<double>("Alarm2SetPoint")
                        .HasColumnType("float");

                    b.Property<int>("Alarm3Action")
                        .HasColumnType("int");

                    b.Property<bool>("Alarm3Enabled")
                        .HasColumnType("bit");

                    b.Property<double>("Alarm3SetPoint")
                        .HasColumnType("float");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("Offset")
                        .HasColumnType("float");

                    b.Property<double>("Resistance")
                        .HasColumnType("float");

                    b.Property<double>("Slope")
                        .HasColumnType("float");

                    b.Property<double>("ValueDivisor")
                        .HasColumnType("float");

                    b.Property<double>("ZeroValue")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("AnalogChannel");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.DigitalInputChannel", b =>
                {
                    b.HasBaseType("FacilityMonitoring.Common.Model.Register");

                    b.Property<int>("AlarmAction")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("DigitalInputChannel");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.DigitalOutputChannel", b =>
                {
                    b.HasBaseType("FacilityMonitoring.Common.Model.Register");

                    b.Property<int>("OutputControl")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("DigitalOutputChannel");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GeneratorRegister", b =>
                {
                    b.HasBaseType("FacilityMonitoring.Common.Model.Register");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<int>("FunctionCode")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("GeneratorRegister");
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.AmmoniaControllerReading", b =>
                {
                    b.HasOne("FacilityMonitoring.Common.Model.AmmoniaController", "AmmoniaController")
                        .WithMany("Readings")
                        .HasForeignKey("AmmoniaControllerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GeneratorSystemError", b =>
                {
                    b.HasOne("FacilityMonitoring.Common.Model.H2GenReading", "H2GenReading")
                        .WithOne("AllSystemErrors")
                        .HasForeignKey("FacilityMonitoring.Common.Model.GeneratorSystemError", "H2GenReadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GeneratorSystemWarning", b =>
                {
                    b.HasOne("FacilityMonitoring.Common.Model.H2GenReading", "H2GenReading")
                        .WithOne("AllSystemWarnings")
                        .HasForeignKey("FacilityMonitoring.Common.Model.GeneratorSystemWarning", "H2GenReadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GenericBoxReading", b =>
                {
                    b.HasOne("FacilityMonitoring.Common.Model.GenericMonitorBox", "GenericMonitorBox")
                        .WithMany("BoxReadings")
                        .HasForeignKey("GenericMonitorBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.GenericMonitorBoxAlert", b =>
                {
                    b.HasOne("FacilityMonitoring.Common.Model.GenericBoxReading", "GenericMonitorBoxReading")
                        .WithOne("GenericMonitorBoxAlert")
                        .HasForeignKey("FacilityMonitoring.Common.Model.GenericMonitorBoxAlert", "GenericBoxReadingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.H2GenReading", b =>
                {
                    b.HasOne("FacilityMonitoring.Common.Model.H2Generator", "H2Generator")
                        .WithMany("H2Readings")
                        .HasForeignKey("GeneratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FacilityMonitoring.Common.Model.Register", b =>
                {
                    b.HasOne("FacilityMonitoring.Common.Model.ModbusDevice", "Device")
                        .WithMany("Registers")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacilityMonitoring.Common.Model.SensorType", "SensorType")
                        .WithMany("Registers")
                        .HasForeignKey("SensorTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
